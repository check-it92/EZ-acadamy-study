24.12.23

현재 내가 만들고자 하는 웹/앱 서비스의 페이지가 어떻게
구조화 되어있는가??

**공부 학습법

-절대 x 하지 말아야 할 것
-> 주말로 계속 미루지 말고 그날 그날 복습을 해볼 것
(그래도 주말에 공부 할 시간이 있으면 무조건 해봐야 한다)
-> 매일 꾸준하게 공부에 흠뻑 해볼것
-> 주말을 규칙적으로 쉬기

공부법
>>> 받아쓰기 하듯 집에서 VS code 그대로 쳐보기
( 선생님꺼 슬랙에서 다운 받아서 그대로 해보기)
그러면서 왜? 이부분을 했는지? 이 코드를 왜 썻는지? 의문을 가져보기

줄코딩 : 1줄에 여러코드를 연이어 작성
---> 가독성 x, 디버깅시 불편, 방식이 대중적이지 않음
주석처리 하는 법
: ctrl + /
축약하는 방법
: font: bold 1.1rem/1 "arial"; 이런식으로 font라는 명시안에
	글씨체 크기/높이 패밀리(글꼴)
cdn.js를 활용해서 "폰트어썸 스크립트"를 설치하게 되면 i태그 내 스타일이
정상적으로 작동하지 않는 버그가 있다 (ex.like 내 하트 색깔만 변하지 않음)

폰트 어썸 공식홈페이지의 스크립트를 가져와서 설치하면 i태그 내 스타일이 정상적으로 작동

부모와 자식의 태그 값은 일일이 작성해주지 않으면
부모(자식) 처음 설정값이 상속이 된다. 그렇기 때문에 개성을 부여해주려면
부모/자식 각각의 값을 설정해 줘야 한다.
그렇기 때문에 css 스타일 우선적용 이라고 불리우는 것이다. 

코드를 중복해서 쓰지 말고 같은 맥락이라면 1, 2 쉼표를 사용하면 된다.
부모값은 동일하게 들어가나 자식값이 다를 수 있는 경우에는
해당 태그에 & 기호를 써서 개성을 부여해주면 된다. <네스팅 기능>

계산기를 활용해서 우리가 만들어 놓은 피그마 디자인(ux)디자인의
각각의 픽셀값 크기는 계산으로 적어놓으면 된다.
픽셀값 적용, or 단위는 rem으로 적은 값도 존재
15px이면 비율을 적용해서 20/15 = 1.3rem으로 적으면 된다.
why? 보기좋은 비율로 상대적인 것임 <디자인적인 것이기 때문에>
-----------------------------------------------------------------------------------------------------------
프로젝트 : 팀에서 구현하길 원하는 UX를 기획 후 UI를 제작
- 4인 1팀 : 무신사 // 쿠팡 // .....etc
- PM(팀장)//TM(팀원)
- 업무를 의뢰하는 클라이언트들과 의사를 수시로 나눠야 한다.

wire-Frame (와이어 프레임)
- 수시로 변하는 요청사항 속에서 변동성을 보다 효율적으로 적용하기 위해
=> 실제 UI를 제작하기 앞서 선과 점, 면으로 웹/앱 페이지를 시뮬레이션 해보는 단계
--설계도를 보여주는 단계라고 생각하기 (구상도, 도면, 스케치..)
=> 가급적 채색x // 이미지 최소화 // 스피디하게 
=> UI 작업 특징 : 구현하는 화면을 기능적인 요소에 따라 그룹화 > Components!!

UI/UX, 퍼블리싱, 프론트엔드 최신트렌드
=> 컴포넌트 화 <헤더 | 본문 | 사이드메뉴>-레고화 시켜놓은 것 (만들어 놓은 블록을 조합하는)

피그마 tip
1. 팔레트 만들기
-보다 색상 선택에 있어서 편하게
2. Low Fidelity WireFrame		<--->		High Fidelity WireFrame
> 이미지 일부허용x // 채색 x				>이미지 일부허용o // 채색o

개인								대기업(양식이 정해져있는)

Lay-out Grid : 
한 화면안에 어떤 컴포넌트 요소들을 레이아웃 정렬하고자 할 때, 몇등분으로 나눠서
어느 영역 범위까지 작업할 것인지 결정해줄 수 있는 일종의 가이드 라인

기본 12columns
이유는 나눠서 떨어지는 수가 많다.
1,2,3,4,6,12 (태블릿 6, 모바일 4등분, pc 12등분)

피그마 디테일하고 이쁘게 가야 한다.
나만의 개성을 갖춰야 한다. 창의성

> 공부 + 작업물
> 나만의 크리에이티브한 포폴
> 3~6/7개
> 비슷한 형태 템플릿//
> 비슷한 양식들
예제) -1 page -커버
	-2 page -프로필
	-3 pgge -기술스택
	-4 page - 포트폴리오
	-슬라이드
	-클릭 > 모달페이지 > git-hub // 기술정의서
	-5 page - 인터렉페이지
	-6 page - 컨택트
	-7page - 에필로그

**기본적인 양식은 있지만 +++나만의 독창성이 첨부되어야 한다.
=> 문제인식이 우선이 되어서 개선하는 방법도 생각해봐야 한다.
(내가 시장에서 불편했던 사항에 어떠한 서비스가 적용되면 좋겠는가?)
내 세상에서 프로그램을 접할 수 있을때 그때 시너지가 나온다.
