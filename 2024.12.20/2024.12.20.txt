2024.12.20

1) git & git hub

git :
- 형상 기억 및 버전 관리 툴 (홈페이지에서 파일 다운로드)
- 로컬 컴퓨터 내 사용할 수 있는 프로그램
- git 공식 사이트 다운로드 (회원가입)
- 내 로컬 컴퓨터 내 .cmd(명령프롬프트) 관리자 모드에서
  소유주 정보 등록
> git config --global user.name"깃허브 이름 정보"
>git config --global user.name"깃허브 이메일 정보"
---위 정보를 정상적으로 입력 시 조회 명령어
> git config --list
- 로컬 컴퓨터 > 작업폴더 생성 (*working directory) 
- 신규생성된 작업폴더 > pure data 가 존재 (*index.html)
- 신규생성된 작업폴더 > git init (*버전을 관리하기 위해 초기에 세팅을 명령)
  => staging area // repository 를 사용하기 위한 목적
- 원래 pure data 상태였던 파일인 untracked data 형태가 됩니다.'
- untracked data를 staging area 보관 : git add .
- 정상적으로 staging area 잘 보관 되었는 지 보는 명령어 : git status
- staging area는 실제 형상 및 버전 관리를 해주는 repository 공간으로 넘어가기
  전 단계의 임시 저장소
- staging area 보관된 data : -> unmokified data
- 어떤 이름 // 어떤 목적? => 명시적으로 알 수 있도록 이름을 명칭해줘야 함
  (=> 이 단계를 commit message)
- staging area => repository : git commit -m "(명시적으로 명칭)"
====> 위 단계들이 내 로컬 컴퓨터를 사용하여 git을 형상기억 및 버전 관리 단계
외부 저장소 초기 생성 단계
git init -> git add . -> git comit -m "명칭" -> 깃허브주소복사 -> git remote add orgin "내 깃-허브 주소" -> git push origin master
(중간에 git status 과정을 보는 단계는 생략을 해도 된다.)
-----------------------------------------------------------------------------------------------
=> 현재까지 과정의 단점 : 오롯이 로컬 컴퓨터에 존재하는 데이터
	해당 데이터들은 같이 협업하는 다른 개발자들은 볼 수 없다는 단점

git hub :
- 로컬 컴퓨터 내 관리되고 있는 data를 원격 저장소 내 repository를 끌어와서
  보관/관리/저장/공유 해줄수 있는 hub와 같은 역할을 하는 (cloud platform service)
  공식 사이트
- git hub 내 repository 신규 생성
-----------------------------------------------------------------------------------------------
git & git hub 연결방법
- 내 로컬 컴퓨터 너미널 > git bash 설정 > git remote add orgin "내 깃-허브 주소"
- 원격 repository & 로컬 repository가 정상적으로 연결되었는 지 확인 방법
> 터미널 : git remot -v => fetch()//pull() 정상적으로 출력 시 연결o

git & git-hub이 정상적으로 연결되었다는 전제
- 내 로컬 컴퓨터 터미널 > git push orgin(=내 깃허브 저장 주소) master 입력
- 내 로컬 컴퓨터 데이터를 git hub repository 로 전송할 수 있게 된다.
- ( **orgin은 축약어 이다. : repository의 short name)
-----------------------------------------------------------------------------------------------
git hub 올라와있는 data를 내려받는 방법 2가지
- 내려 받고 싶은 repository에 접속 후 우측 상단 "code" 녹색버튼 클릭후 zip 다운

- 로컬 컴에 신규폴더 생성 후 해당폴더 내에서 vs code 연결프로그램 열기
>>하단 터미널 접속 : git clone git hub repository 주소
- 최초 1회 추천
(*최초에 git hub repository의 데이터를 업로드한 개발자의 .git 까지 모두 복제)

- 로컬 컴에 신규폴더 생성 후 해당폴더 내에서 vs code 연결프로그램 열기
>>하단 터미널 접속 : git init(초기화) -> git pull git hub repository주소
-----------------------------------------------------------------------------------------------
********새로운 부분
git fork : 타인의 깃 허브 내 repository를 즐겨찾기 처럼 내 repository (수정/보완/발전)
	    +++내 입맛에 맞게끔 변화 시켜 발전 시키는 것
 (--대신 원작자의 필터링을 거쳐야 한다. 소유권-소스코드) - 피드백(공유자) 후 협업하는 과정

> 원래 fork의  의미는 타인의 저장소 안에 어떤 데이터 정보들을 내가 업데이트 하고 공유함으로 인해서 더 좋은 데이터로 발전시킬 수 있도록 하기 위한 목적
>> 원작자의 승인 전까지 원본은-> 삭제 /편집 을 할 수 없다.
>> fork 는 타인의 저장소 안에서의 내 저장소로 클론(복사/붙여놓기) 하는 기능
> 해당 포크해온 우측 중간의 초록색 버튼 (code)
> 터미널에서 오류로 인한 또는 보기 어려울 경우 명령어로 'clear'로 정리 할 수있다.
> .git는 여러 폴더를 만들 수 없다. 하나의 폴더에 한개 무조건!!
> 깃 허브에서는 .md 라는 확장자를 많이 쓴다.
> 초기에 원작자의 클론 가지고 온 것을 내가 사용하기 위해
  내 컴퓨터와 싱크를 맞춰야 해서 최초 1회 한번만 (중복할 필요가 없다.)
(git remote add upstream) <https://github.com/check-it92/kdtfed-241220.git>
(명령어)				(원작자 링크)
> 순서
싱크 후 git add .>>git status>>git commit -m"241220">>git push origin master

내 저장소에는 새로 저장이 되지만
원작자에 저장소엔 수정이 되어 있지 않다.

명령프롬프트 // 파워셀, 깃 배쉬 둘다 통용되나 권장사항으로 각 컴파일러에 맞는걸
		사용하는걸 추천한다.

****팀프로젝트로 git & git hub (실무에서 어떻게 사용이 되는가?)
다수가 하나의 깃 허브를 가지고 어떻게 사용하는가?

팀장 - 초기 생성 폴더 외부 저장소 저장 (예로, company - project<master>) 생성
팀원 - (절대 초기 마스터값은 건들면 안된다.) // 내가 수정한 값을 보여주고 난 뒤 수정,저장
	-새폴더 작성 - 초기 생성파일 깃허브에서 포크 - (클론) 폴더 에서 코드 열기
	- cd 상위폴더 이동 - 본문 내용 보완 - 
	- branch : 최상위 저장소 폴더 안에 하위 세부 폴더 사용
	- git checkout -b 새폴더명 --> 으로 스위칭
	- 보호하는 명목으로 폴더를 변경해야 한다.
	- branch 순서
(master) 파일에서 >> git checkout -b 새폴더명(스위칭) >> git add . >> git commit -m"()commit" >> 내부저장소 저장 >> git push origin 스위칭한 새폴더명 >> 깃허브 저장 완

후에 해당 수정된 파일을 리퀘스트 요청 (확인해달라고 메세지 보내기)
(pull&request)

수정된 부분은
 
마스터부분마스터부분
마스터 부분마스터부분
+ 내용내용내용내용
+ 내용내용내용내용
이런식으로 파일이 뜬다.
팀장님이 파일을보고 검토 후 맘에 들면 마진 버튼을 누르고 최종적 마스터 파일이 된다.

4 명이 동시 작업을 할 시

회사 대표(PM)도 와중에 작업이 진행된 부분이 있다면 더 보완한 부분이 있다면
마스터 프로그램 들어가기 (아직 신입이 작성한 부분이 없을 시)
1: PM - master data
파일이 새로 올라올시 > 수정사항 최신화 시키기(그룹채팅방) 소통해야 함
같은 일 두 번 하지 않도록 (소통 오류로 인한 문제 차단)
기껏 일 했는데 마스터 파일이 변경되어서 저장이 안되는 문제 발생
2: 작업 중
3: 일 끝내고 올린 파일 피드 백 후 마진 적용
4: 당사자 
- 최종 마스터 파일을 저장하기저 내 로컬컴퓨터에 저장(백업) 해두고
새롭게 마진 된 파일 받아서 적용시키기

깃 복습하기 기초 완