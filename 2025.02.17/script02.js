/*
// trim() 문자열의 가장 바깥쪽의 여백을 없애는 함수
// 종류 trimStart(), trimEnd() > 문자열의 첫 번째, 마지막의 여백을 선택해서 없애는 함수

const str = " ab cd ef ";

console.log(str.trim());
*/

/*
let str = "Good, Morning.";
console.log(str.toUpperCase()); // 모든 문자열을 대문자로
console.log(str.toLowerCase()); // 모든 문자열을 소문자로

// 내가 원하는 문자열을 추출하고 싶을때
console.log(str.substring(5)); // 인자값이 하나만 있을 경우 해당 기준점 이후부터의 것을 추출
// 0 ~ 3번 까지의 것을 추출 2번 인자는 인자값보다 하나적은 인덱스까지 의미
console.log(str.substring(0, 4)); //인자값이 두개로 있을 경우 (~해당 선택구간) 해당 기준점 이전부터의 것을 추출

// 후에 나온 문법
console.log(str.slice(5));
console.log(str.slice(0, 4));
console.log(str.slice(-5, 12));

// >> 둘이 똑같이 출력이 되는데 무엇이 다르냐??
// substring() > 1번 인자값으로 음수를 받게 되는 경우, 무조건 1번 인자값을 0으로 인식
// 음수는 x 축으로 본다면 왼쪽으로 이동하는 것 ** 양수는 왼쪽에서 오른쪽으로 이동하면서 인식
// 그래서 good 의 음수로 0보다 작아지면 벗어나게 된다. 없으니까 글자가 결국 인식 못한다. 그래서 0으로 자동전환되어 인식된다.

// 그런데 slice() 마지막 글자부터 위치가 변경되어 시작된다. 거꾸로 -1부터 시작하여 문자열을 인식하게 된다.
// 그래서 첫 번째 인자값에 음수로 인식이 되고. 두번째 인자값을 양수로 입력할 경우 한바퀴를 돌아 출력을 하게 된다.
// 예시 Good morning 양수 : 0,1,2,3,4,5,6,7,8,9,10,11,12 라면 음수 : -11,-10,-9,-8,-7,-6,-5,-4,-3,-2,-1 으로 된다.
*/

// split(구분자) > 특정 문자열에서 해당 구분자를 기준으로, 각각 아이템을 구성 > "새로운 배열"로 인식
// " " -> 빈 칸 문자열도 인식 가능   // "" 이것이랑은 다르다. 빈문자열은 아무것도 안쓴것

let str = "Good, Morning.";

const arr = str.split(", ");

console.log(arr);
// ['Good', 'Morning.']