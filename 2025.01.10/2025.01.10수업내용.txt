2025.01.10

** 수업 내용 **
영상이란? 1초의 29~3030개의 정지된 스틸 이미지(=frame)로 완성

** https://gsap.com/ 해당 애니메이션에 대한 효과를 부여해줄 수 있는 라이브러리

html 에서 애니메이션 효과 주기
디자인적인 면이기 때문에 창의적으로 주는 것
디자인의 근본적인 목표는 >> 제품(유저)의 타겟 설정, 필요 이유, 어떤 궁극적인 목적 에 적합하게 만들기

전환 : transition
애니메이션 : animation
변환 : transform *원본에서 모양이 변하는
 -변환효과에 60분법(,호도법) 우리가 아는 시계방향 각도, 변수를 적용시켜서 부여할 수 있다.
 예시) transform: rotate(0deg)  >> transform: rotate(360deg) 각도를 부여해준것이다.

gsap, threejs, anime - 
> 화면에 인터렉티브 // 크리에이티브 한 요소를 창작해서 넣는 작업은 정답은 없다.

@keyframes circle {  >> 써클이란 효과를 준것!!
      0% {  }  
      30% {  }  각각의 0~ 100%의 과정 중간을 창의적으로 내가 부여해준 값에 따라 수행함
      70% {  }     			
      100% {  }
*** (=같은개념)
	from {}
	to{} 으로 작성해도 된다.

이 키프레임의 효과를 설정했으면 내가 부여하고자 하는 선택자에 태그값을 부여해준다.

1. 애니메이션

     animation-name: circle; : keyframes를 활용해서 정의한 해당 애니메이션의 이름을 입력
     animation-duration: 2s; 2초의 시간동안 움직이는걸 부여하겠다. > 실제 실행하고자 하는 속성의 시간을 부여
     animation-timing-function: linear; (구현되는 애니메이션의 가/감속 부분 설정) 균일하게 움직이겠다.
     animation-iteration-count : 내가 계속되는 값(=0회 반복,loop)을 부여해주고 싶을 때
     animation-direction : 내가 설정한 진행 방향으로 또는 양방향으로 설정값을 부여해주고 싶을때
					(default = 일방통행  //  반대방향으로 가능)
     animation-delay : 애니메이션의 지연값을 부여해줄 것인가?
     animation: circle 2s linear none infinite alternate;  >> 축약형
		   이름 / 속도  / 가감속 / 딜레이 / 반복값 / 진행방향 식으로 입력시키면 된다.
*******
     만일, 내가 변수를 부여해서 애니메이션에 상태를 변화시켜주고 싶다면
	&:hover {   이런식으로 설정값을 준다.
          animation-play-state: ;  >> 애니메이션에 변수(어떠한 값)을 부여 줄것인가? 
						실행상태를 제어 할 때 사용

2. 변환 ( = Transform )

 html을 통해서 만든 요소(element)들의 { 형태 || 위치 }를 변환시킬 때 사용!!
항상 좌상단을 기준으로 시계방향으로 양수 반시계방향 음수  **웹 좌표계 참조
사각형을 만든다 하면 예시로 { (x축,y축) 1(0,0) // 2(5,0) // 3(-5,-5) //4(0,-5) } 이렇게 순서대로 좌표값인거고
** 우리가 구현되길 원하는 디테일을 자세히 입력해줘야 해서 입력순서가 중요하다.

예시로 transform: rotate(60deg) x 방향으로 60도의 회전 scale(0.8) y방향으로 8을 돌림 ;
	skewY(10deg) 기울임 // translateX(50px); 위치 변한  >> 입력순서가 중요하다.

1. 각도의 변환 (rotate)
2. 크기의 변환 (size)
3. 기울기 || 위치 (x축,  y축)의 변환 - **상황에 따라 z축의 변화까지 가능 (3D)기능 + 공간감부여

3D 입체적으로 우리가 접근 할 수도 있다.
정육면체 ( 공간의 개념 ) - 3차원 변환 함수 면이 6개가 필요하다.
>> 하나의 기준점을 축으로 면을 이어준다.

메인 인 면을 기점으로 다른 위치에 있는 면을 가로(x축) 세로(y축) 몇 도로 회전을 해서 하나로 뭉칠 것인가?
시작점에서 회전을 주는것이지 // 중심점에서 회전을 하는게 아니다. 그러면 가운데에 다 겹칠뿐
점, 선, 면을 이해해야 한다. 
rotateY  // rotateX 어느 시작점을 할 것인가?

translate3d(0, 0, 100px);
	      x축,y축,z축

**원근감 z축을 기반으로 앞 , 뒤로 좀 더 폭넓게 깊게 부여해줄 수 있다.
perspective 를 많이 줄수록 공간감이 깊어진다.
보통 우리가 사용하고자하는 것에 2배정도로 기본값을 준다. ( 지름의 2배수 )

디자인 적인 요소로 DPI는 "인치당 도트 수(Dots per inch)"를 의미하는 단위
해상도의 차이로 나눠진다. 1번의 출력을 위해 점을 몇번 찍을 것이냐?

책을 만들때 글자의 선명도를 위해 잉크 몇번을 찍어서 선명도를 줄것이냐? 기준 300dpi
웹에선 우리가 보여지는게 다르기 때문에 72dpi >> 고화질 , 고용량의 차이


우리가 웹페이지를 만들 때 공간감을 전체적으로 주고자 할때는
원을 만든다 하면 둘레 값을 계산 해야 한다. 원의 넓이 = (반지름) × (반지름) × (원주율). 
원의 둘레 값은 = 2πr

perspective 란?
 > 관점 // 원근법 
사진 촬영 때, 2D요소를 하나의 장면으로 담아주는 기계
가까이 있는 사람과 멀리 있는 사람 >> 크게 vs 작게   -- 한 공간에 거리감을 부여해줘서 공간의 깊이감이 생성

css 에서는 사용자가 모니터를 바라보는 상황에서
> 상대적으로 사용자에게 가깝게 느껴지도록 하는 속성
(포지션을 앱솔루트) 절대 위치값 하나의 공간좌표에 설정되었을때
> 위치속성 z-index: +일수록 앞으로 나오고 -일수록 뒤로가는 습성

**perspective
=> 기본적으로 3D값을 가지고 있는 요소들의 z값의 default는 0에서 시작한다.
 (면적인 요소 2D가 기본이라는 얘기)
=> 해당 값이 클수록 현재 모니터 화면에서 해당 요소를 바라보는 간격이 커진다! 라고 이해!!


*** 피그마 ***
개발중심의 프로그램기능들이 많다.
변수 > 
