** 페이지 라우팅 

우리는 페이지 라우팅을 위해 가장 최상단의 컴포넌트에서 이루어지며
"라우터 형제" 를 이용해서 만들게 된다.
import { BrowserRouter } from "react-router-dom";
import { Routes, Route } from "react-router-dom";
이런식으로 설정해야 한다.

1. 1차방법
<BrowserRouter>
감싸는 껍데기에
<Route>
<mainPages>  // 이런식으로 페이지를 구성해주면 페이지간의 이동이 가능
</Route>
</BrowserRouter>

2. 2차방법

또는 main.jsx 에 App를 불러오고 있으니
그 해당 컴포넌트에 각각 분리해서 최상단에 
 <BrowserRouter>
    <App />
  </BrowserRouter>
이렇게 감싸주고

App.jsx 에서는 Routes, Route 만 적용해서 써주면 된다.

<Route path="/diary/:id" element={<Diary />} />
        <Route path="/edit/:등등" element={<Edit />} />

만약 : 우리가 n번째의 파일을 불러오기 위해서는 정적파라미터에 동적파라미터 값을 부여해서
	경로설정을 해줘야 한다. 
	그래서 웹 브라우저에
	 http://localhost:5173//diary/1 ..등등 id의 값마다 우리가 찾아볼수 있게 된다.
**url Parameter = 매개변수 (가변값), 동적파라미터라 부른다.
   Dynamic Parameter = 동적 파라미터

**
import { useParams } from "react-router-dom";
  const params = useParams(); 이 훅함수를 "라우터 돔" 에서 사용해야한다.

 ** useSearchParams => 쿼리스트링 문자열을 찾아올 수 있는 훅함수이다.

http://localhost:5173/1?key=value => "?"뒤에는 항상 key와 value 값이 존재한다. 
						이 한쌍이 "쿼리스트링" 값이라 부른다. (문자열로 되어진 요청값)

**Link, useNavigate = 둘이 같은 기능을 한다. 그치만 내부의 설정은 다르게 쓰인다.

useNavigate = hook 함수이기때문에 인자값과 함수의 중복 사용이 가능하다. 조건부,세부설정 o

Link = 컴포넌트 이기 때문에 단순 이동으로써의 기능만한다. 조건부,세부 설정x 이 안된다.
	 (= a 태그와 같다.)
** 예시 a태그는 href="./" 이런식으로 썻듯이 여기선 to={} 로 쓰인다.
 <div>
        <Link to={"/"}>Home</Link>
        <Link to={"/new"}>New</Link>
        <Link to={"/diary/1"}>Diary</Link>
        <Link to={"/edit/1"}>Edit</Link>
      </div>
