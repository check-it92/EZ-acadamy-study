/* 자바스크립트 기본 내장 객체
예시)
1. Math() => 수학객체
2. Data() => 날짜객체

class = 자주 반복적으로 빈번하게 유사한 형태의 객체를 만들어서 사용해야 하는 경우,
일일히 그때마다 객체를 생성해야 하는 비효율성을 개선하기 위해서 사용한다.!

class를 통해서 객체의 모델을 하나 생성하게 됨
모델(틀) => 실제 객체로서의 역할은 하지 않는다.(클론) (일종의 붕어빵 모형)
But.!! 해당 모델을 가져다가 사용을 하면,
객체 탄생 (* 최초에 설정해놓은 모델이 가지고 있는 속성 & 메서드 함수를 그대로 상속받아서 사용할 수 있는 복제본)

class 를 통해서 만들어진 모델을 가져다가 사용할때에는 반드시 규칙!! "new" 라는 예약어를 사용하기로 약속!

예시) new Date(); 클래스를 통해서 만들어진 이 모델을 = 프로토타입(ProtoType) 이라 한다. 

윈도우 출력시 내장 되어 있는 객체!
new Date(); 
Wed Feb 12 2025 11:15:58 GMT+0900 (한국 표준시)

배열 형식 예시 
new Array()
[]length : 0
[[Prototype]] : Array(0) // 이런식으로 출력이 된다.


let arr = new Array();
console.log(arr); // 이게 정석적인 방법이다. 저렇게 규제를 해놓고 (내장객체를 선언하고) 해줘야한다.

const arr01 = [1, 2, 3]; // 이건 우리가 약식으로 만든 형식 쓰기 편하고 효율적

자바스크립트 내부에서 시간 관련된 무언가를 할 때 반드시 인지해야하는 기본 상식!!

대부분의 프로그래밍 언어에서는 시간을 인간친화적인 방식으로 카운트를 하지 않는다.

기본값으로 밀리초 ms 의 단위 개념으로 구성이 된다.
예시) 인간세상 1초  = 컴퓨터 세상 1000밀리 초 = 백분율 0.1초
    인간세상 1분 = 컴퓨터 세상 60 * 1000 = 60,000밀리초
    인간세상 1시간 = 컴퓨터 세상 60 * 60 * 1000 = 3,600,000 밀리초
    1 일 = 24 *60 *60 *1000 = 86,400,000 밀리초

  자바스크립트는 지금 이순간에도 우리의 인간계 시간을 밀리초로 변환해서 계산
  1970 년 1월 1일이 시작점이고 그때로 부터 쌓이고 있는 것이다.

  
*/