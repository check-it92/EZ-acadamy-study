html, css >> 에러 투성이 나의 코드 > 어디서 무엇이 잘못되었는지...
그럴때 우리가 프리티어랑 확장프로그램이 우릴 도와준다.

제일 중요한 scss 사용법

scss 파일을 열고 저장하면 자동으로 css와 연결이 되는데 
이때 부터 메인은 scss 파일이다.
무조건 여기서 수정 보완 하는것이다. 스타일에서 하는 순간 저장 후 많은 사태가 일어난다.

**** 무조건 세미콜론으로 마감 하기 해당태그들
*** <link rel="stylesheet" href="./style02.css" /> 무조건 html에 css로 연결하기 // scss로 하면 안된다.
scss 중요문법  vs   css 에서 사용할 수 없었던 문법 위주의 설명

1. @at-root : 부모 선택자 내 중첩형태에서 밖으로 나가는 기능!!
- 구조상 동일한 자식 선택자인데 내가 의도적으로 위치를 옮기지 않아도
  전체에 값을 부여할수 있게 해준다. 야

2. variable : 굳이 :root var() 불필요!!
$main-red-color
color: 

3. @import : 국이 url() 경로 작성 불필요!!
이런식으로 다이렉트로 사용가능 무조건 - scss 파일을 불러오기!! 서로 연동되는건 같은 확장자끼리

4. 기존 css에서는 사용이 불가했지만 (무조건 calc 함수를 썻어야함)

 자바스크립트 안에 있는 산술연산자 모두 사용가능 => 직접적인 산술연산 바로가능
padding: $main-font-size / 2; 이런식으로 계산식으로 쓸수있다. 다이렉트로

5. 스타일 그룹 설정 : 반복 및 공통으로 사용 될 것으로 판단되는 스타일을 하나 정의해놓고,
		 	    그때 그때 마다 사용가능 @mixin // @include 구분해서 사용하면 된다.


@mixin notice-button; 무조건 변수명 을 지정해서 사용해야 한다. (선언)
=> 각각의 스타일이 메인 + 공통 스타일을 서브로 적용 가능한 개념
하나의 공통된 스타일을 설정
그다음
내가 넣고자 하는 태그 안에 @include notice-button; 이런식으로 넣으면 된다. (호출)

6. @extend : 공통스타일이 메인 + 해당 속성의 스타일이 필요한 요소들을 불러모으는 방식

5번과 6번 은 사람 각자의 스타일대로 쓰는 것인데 개 중에선 mixin 스타일이 css로봤을때 좀 더 깔끔하다.

7. @for : 반복문을 사용할 수 있음 
@for $i from 1 through 9 {  ----- $i 가 변수 (let와const)개념 from a through b 로 쓰인다.
  .frame {
    div:nth-child(#{$i}) { --------#{변수} 꼭 달러랑 해쉬를 쓰고 가져와야 한다.
      width: $main-font-size * 3 * $i; -> 증감하도록 구성했다.

8. map-get: 객체 사용가능
예시)
$color: (
  font-primary: #2d3436,
  font-secondary: #636e72,
  font-focus: #d63031,
  bg-primary: #dfe6e9,
  bg-secondary: #b2bec3,
); --------> 변수 설정

background: map-get($color, bg-primary);
h1 {
      color: map-get($color, font-focus);
      font-size: map-get($fontSize, large);
    }

이런 식으로 불러다 갖다 쓸수 있다. :root {var()} 컬러 때와 동일하게
정해진 규격으로 통일감있게 쓸수 있다.
*****그래서 최초 1회 설정시 편하게 사용할 수 있다.

자바스크립트 3가지 1급시민 조건
1급시민 => 함수의 반환값으로 함수가 올 수있다.
콜백함수가 필요한 이유

비동기적 처리 방식!! :  순서에 상관없이 동시에 일을 처리할 수가 있다. 헤더와 풋터 광고 등을 활용

