2025.01.08
** 수업내용

1. title 각 해당 파일에 맞는 주제로 타이틀 설정하기
타이틀 위에 링크태그를 만들어서 스타일.css 연결해놓기

깃허브에 파일을 커밋할때 .vscode 가 생긴다면 오류가 생길 수 있는데
그때는 현재 작업중인 폴더에 .gitignore파일을 새로 만들어서 추가 후에 커밋하면 된다.
.gitignore 이거는 무시하라는 뜻인데 이렇게 되면 내 작업중인 폴더가 무시하게 된다. 무시 후 작업
-대용량 파일을 올릴때 주로 사용된다.
-.gitignore 안에 해당 무시할 폴더태그를 넣으면 된다. .vscode를 넣기
다른 예시) 100mb가 넘는파일들 (img파일),   .vscode
		내 공개적인 API(주소)-트래픽되지않도록

github 에 커밋할 수 있는 최대 파일 크기는 100mb가 최대이다. 초과하면 안된다.
내가 여러차례 수정해도 안올라가는 경우는 캐시에 흔적이 남아 있기 때문에
캐시 리무브를 해주고 수정한 파일로 올려 주면 된다. (git remove --cash)

항상 무언가를 하기전 테스트를 하고 다음단계로 넘어가는 습관을 길들이는게 좋다.
ul#gnb>(li>a)*5
#이 아이디속성 역할

class라는 명시를 주는 이유는 우리가 선택을 해서 중복되는 부분들은 굳이 여러 작업하지 않아도
선택을 함에 있어서 여러 변수값을 부여해주기 위해서 (class를 여러번 부여해도 좋다.)

전체적인 우리는 반응형 페이지라는 인식을 깔아두고 만들어야 한다. (header, main, bottom)
그래서 액자식으로 구성을 짜게 되는데 컴퓨터도 인식을 할 수 있게끔 해야한다.

전환효과는 반응선택자가 적용되기 전 단계 줘야한다.
예시) transition: background 0.3s, color 0.3s; == all 0.3s; 
          &:hover {
            background: var(--gnb-font-color);
            color: var(--main-light-color);
          }
 >같은 개념이지만 내가 원하지 않는 부분 또한 적용이 된다는 차이점 (내가 부여한 부분만 // 전체)
  화면이 복잡해질수록 all 보다는 개별적으로 주는게 사이드이펙트를 방지할수 있다.

<figure> - 보통 슬라이드, 프로모션 배너에 사용하는 시멘틱 태그
내가 현재 화면에서 보여지고 있는 높이값 을 vh(view height)

figure 와 inner 의 공간 좌표가 다르다 왜냐면
position 에서 { relative 와 absolute } 서로의 위치 값이 다르기 때문에

&copy; 유니코드 > 문자열로 도형을 만든것이다. = ©

LTS : Long Term Service / Support
파이어베이스에서 호스팅 설정시
CLI 방식으로 입력을 해야하는데 이때는
우리 명령프롬프트 를 관리자 권한으로 실행시켜야 한다.
그리고 npm install -g firebase-tools 호스팅에서 나오는 코드를 입력하면 된다.

터미널 우리가 쓰는것 ( 터미널, 파워셀, 깃 배쉬 )
안된다면 그럴 때 chatGPT 를 활용해서 쓰면 될것이다.

보안정책이 리눅스 대비 취약하다 보니 정책이 강화가 되어서 안되는 경우들이 뜬다.

먼저 1. 환경변수 설정에서 path 에서 npm 설정을 해준다.

그래도 안된다면
그럴땐 윈도우 돋보기에서 윈도우 파워셀 부분을 관리자 모드로 실행 후
Get-ExecutionPolicy 보안정책을 재설정 해줘야 한다.
Set-ExecutionPolicy RemoteSigned
그리고 Y (예) 로 재설정해준다면 보안이 한단계 격하되어 실행이 될것이다.

내가 무언가 수정을 하거나 해결 보완을 한 부분이 있다면
깃허브를 활용!

깃허브 홈페이지에서 issues 에 제목과 본문내용을 기입 후 저장하면
공유되는 파일에 뜨게 된다. 그럼 팀업과정에서 해당 팀들끼리 공유가 된다.

깃을 제대로 쓰는것은 프로젝트를 활용하고 있는지
내가 그 문제를 해결하는 과정을 이슈를 통해 고지하고 있는지?
여러 과정들을 기입하는게 좋다.

파이어 베이스 로그인 후 초기화 하기
firebase login > firebase init

이후 화살표방향키를 통해 해당하는 카테고리를 스페이스로 선택하기
hosting (*) 선택하기
그 후 제가 작업중인 프로젝트 선택하기
그리고 해당 폴더 만들기 public 공유해서 쓸 페이지
폴더 완료 후 해당안에 우리가 작업한 html + css 파일 집어넣고
라이브서버 로 재확인 하기
하고 난뒤 마지막으로 터미널에 firebase deploy 하고 나면
컴플릿 후 예시)Hosting URL: https://myfirstproject-25-01-08.web.app
완성이 된다. 컨트롤 키 누르면 만든 홈페이지가 호스팅이 된다






