2025.01.23

** 수업내용

1. 항상 연산식을 작성하기 전 변수 설정이 필수이다.
(생각을 해야한다. 뭘 하기 위해 뭐가 필요한지) 목적과 수단이 = 방법을 불러온다.

2. 함수가 구현하고자 하는 값이 뭔지에 따라 매개변수가 필요할수도 없수도 있다.

3. return 함수의 값을 외부에서 쓰기 위해서 반환하다 라는 뜻의 리턴값을 입력한다.

4. 웹브라우저에서 관리자모드를 켜고 콘솔창을 보면
-sources 창이 뜨는데 여기 자바스크립트 내가 설정한게 모두 뜬다. 여기서 디버깅도 할 수 있다.
-breakpoint 중단점을 찍고 거기서 돌려보면 된다.
 Scope = 범위를 확인 할 수 있다.
// 전역 스코프 = global scope > 
var 변수 는 전역활용 -> 오롯이 이것만 된다.
var을 쓰지않아도 전역활용이 가능한데 이유가 window=global 영역에 위치하고 있기때문에
부모로 부터(window)로부터 받기 때문에 가능

const, let = 는 전역과 로컬이 위치가 어느 변수 자리잡고 있느냐에 따라 위치가 달라진다.

자바스크립트는 이벤트가 버블링 과 드릴링이 있다.
위로 가냐 아래로 가냐 의 차이가 있는데

*버블링과 이벤트

예시로 마우스 오버했을때와 마우스 엔터했을때 클릭선택의 갯수가 다르다.

div.out {0} 한태그안에 같은 이름의 여러 태그들이 있다면 목차성(분별성)을가지고 
		이렇게 구분해서 써도 된다.

버블: 거품 // 방울
> 가볍다 > 위로 간다
> 보통의 일반적인 경우에는 대부분 이벤트 버블링
> event.target => article (* 실제 이벤트가 발생된 지점)
> event.currentTarget => (* 실제 이벤트 발생 후 이벤트 경우 되고 있는 지점)

> 이벤트의 성격에 따라 버블링을 적용
- mouseover (* 이벤트 버블링 효과가 나타남)
>> 자식요소를 선택해도 감싸고 있는 부모요소의 영향을 준다. 같이 할당되는 경향이 있다.

- mousenter (* 이벤트 버블링 효과를 차단했다.)
>>

<-> 이벤트 드릴링 = 같은 의미로 '이벤트 캡쳐링'


defer 개념
https://namnamiroo.tistory.com/233 사이트 참조
헤드에 그냥 script으로 자바스크립트파일을 걸어두면?
동작 순서
1. parsing: head 위부터 한 줄씩 html파일을 parsing한다.
2. fetching: script태그를 보고 필요한 JS파일을 서버에서 다운로드한다.
3. executing: 실행시켜 보여준다.

⇒ 단점: 자바스크립트의 파일이 크고 무겁다면, 화면에 나타나기 까지 오래걸린다.

defer 쓰는 이유
asyn과 마찬가지로, html파싱하다가 JS파일을 병렬로 다운로드를 진행한다.
asyn과 달리, html파싱이 모두 끝난 후에 JS파일을 실행 시킨다.
정의되지 않은 요소를 조작하는 경우 등 위험요소가 발생하지 않는다!
굿!👍🏻

asyn vs defer 비교정리✨
asyn
여러개의 js파일을 걸어두면, 내가 작성한 코드의 순서에 관계없이 먼저 다운로드된 파일부터 실행 된다.
즉 내가 원한 실행순서와 다르게 실행 된다.
순서에 의존적인 자바스크립트 파일이라면 문제가 될 수 있다.

defer
여러개의 js파일이 있어도, 순서대로 다운로드 받고
html파싱이 모두 끝난 후에 내가 작성한 코드의 순서대로 실행 된다.
즉 내가 원한 실행순서대로 차례로 실행된다.
그러므로, 가장 효율적이고 안전하다!
