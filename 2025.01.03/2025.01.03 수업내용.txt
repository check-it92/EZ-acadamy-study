2025.01.03

수업 내용

LMS (중앙정보시스템)
=> 그룹채팅방 slack을 대체
=> 프로젝트 정보공유
=> 학원자체와 소통을할수 있다.

자격증 크게 정처기, 웹디기 - 이 2가지 시험이 올해 1월 시작이다.
웹브라우저 에서 F12 또는 ctrl + shift + j 를 누르면 관리자 모드로 들어가게 된다.

학원에서 준 교과서 웹 프론트엔드 책보고 35p 반복학습하기

html ++ (12.31)

15.Semantic태그

- 의미론적인 (*태그에 의미를 부여하자)
- 웹표준을 지킨다!!


div 가 계속 중첩되고 반복될 수 록 각자의 ID를 부여해야 하는데 이렇게 되면
직관적으로 보는게 어려워져 구시대적인 방식이 된다.
div id "ddd"를 계속해서 나누기 보다는
태그명 자체를 {시멘틱 태그 -  header,footer,section}.. 등등 명시적으로 주는게 좋다.
예) <div id="section"> => <section> 으로 하는게 보기 쉽다. 구분도 쉽다.


웹퍼블리셔 채용 // 프론트엔드 채용
> 웹표준 개발
> 기본적인 태그에 작성해야하는 옵션/기본 속성 준수
> 시멘틱 태그를 활용하기

우리가 이쪽을 전공하기 위해서 시간은 10년 정도 걸린다.
의대졸업 > 인턴 > 레지 > 의사(*10년공부)
풀스텍 개발자 = 의사 동일한 시간이 걸린다.
이해가 먼저! // 자주 반복적으로 사용 // 자연스럽게 익숙 & 암기 가 될수 있게끔 해야 한다.

예시) div#nav>ul>(li>a{menu-$})*3
           id값 부모>자식        카운트(숫자)

◆ CSS3 ◆

> Cascading Style Sheet
공부할 요소 3가지
> html 에 css속성을 적용하는 3가지의 방법
-인라인 스타일 : 해당 태그에 속성으로 한 줄로 쓰여지는 방식
			단점 : 많이 복잡해진다. (부득이한 경우에만 쓰임)

-내부 스타일 - html 파일안에 스타일 요소를 추가하는 것
<style>
      /* reset css */
      * {
        margin: 0;
        padding: 0;
        /* *는 전체 선택자를 뜻한다. 고유값을 리셋 시킨 것 이것을 "reset css"라고도 한다.*/
      }
      h1 {
        background: crimson;
        /* h1이라는 태그명을 불러와서 스타일을 적용시킨다. 이 방식이 "태그선택자" */
      }
      p {
        color: brown;
      }
    </style>
    <!-- html 태그 안에 쓰이기 때문에 "내부 스타일" 방식이라 한다. -->

-외부 스타일(*실무에서 가장많이!!!) - 스타일 시트를 밖에 (따로 파일을 만드는것)
예시) link 태그를 생성해서 해당 스타일시트 파일과 연계하는 것
<link rel="stylesheet" href="./style.css">

네스팅 기능으로 같은 태그명을 여러번 쓸 필요없이 &기호로 같은 태그에 쓸수 있다.

1) 선택자
- 전체선택자(모든요소를 다 찾아오겠다) :  * {} (기호)
 html문서 내 모든 태그를 찾아와서 스타일 적용시키는것

- 태그선택자(해당 태그명을 불러와서 내부 스타일 안에 입력) : 
html을 통해서 입력한 태그명을 그대로 가져와서 스타일 적용

- ID 선택자 : html 문서상에 id라는 속성을 부여하고 해당 id속성값을 활용해서 선택자로 사용하는것			(비싸다. 선택자 로 찾아올때 #을쓰고 하나씩 해줘야 하지만)								
- 클래스 선택자 : 
html 문서상에 class라는 속성을 부여하고 해당 calss속성값을 활용해서 선택자로 사용하는것
 		(효율적이다. .(온점)을 찍고 선택적용이된다.

- 속성 선택자
html 태그 내 속성을 구분하여 스타일 선택자로 사용하는 것

-후손 & 자손 선택자
 
후손 : 자손을 포함한 모든 자식요소들을 의미!! 조부모부터 나 까지 전체의 가족,친인척 혈통
#header {
         h1 {     //이렇게 되면 h1으로 설정된 모든 태그를 적용시킨다.
          color: brown;
        }
      }

 자손 : 부모요소의 직계자식만을 의미! 부모님의 자식 "나" 주체의 자식세대
#header {
        & > h1 {     // 이렇게 되면 해당 태그의 자손 태그 (하위태그만 적용)
          color: brown;
        }
      }
**자손은 후손안에 포함되는 개념

- 동위 선택자 : 동일한 부모 밑에 복수의 (형제)가 존재할 때 특정형제를 기준으로 다음번
			혹은 복수의 형제를 선택자로 찾아오고 싶을때 사용

1) 특정 형제의 바로 다음번째 형제를 찾아올때
- #listEx {#firstLi + li }: +기호로 해당 선택자 다음번째의 태그를 찾아올때

2) 특정 형제 아래 모든 형제들을 찾아 올 때
- #listEx {#firstLi ~ li } : ~기호로 해당 선택자 다음의 모든 태그를 찾아 올때

- 반응 선택자 : 사용자의 행동(마우스 커서 선택,드래그,클릭,,,등등)으로 인해서 태그가 반응할수 있도록
			스타일 속성을 줄 수 있는 선택자
	***transition: 반응선택자를 쓰기 전에 전환 효과는 사용자의 반응이 시작되기 전 원본데이터에
			적응 시켜야 한다.
	***transform: translateX(-50%) 변환 효과이다. 해당 효과를 원본데이터에서 바꾸는 것
				이 때, X, Y 축에 따라 방향이 바꾸는 것이고 X는 가로 Y는 세로  
											왼쪽 (음수) 방향 오른쪽 (양수) 방향
											

-상태 선택자 : html 태그안에 상태를 정의할 수 있는 태그들이 존재, 해당 태그들의 (상태)에 따라서
			스타일 속성을 상이하게 적용하고자 할 때

> form > checkbox, input, radio (태그들)
예시) radio 태그는 둘중 하나의 선택을 할 때 

  예시)    input {  여러 상태들에 대해서 
        &:enabled {  가능한 영역이냐
          background: greenyellow;
        }
        &:disabled {  불가능한영역이냐
          background: gainsboro;
        }
        &:focus {  선택이 되어지는 영역이냐
          background: tomato;
        }
      }
예시 응용 checkbox
      input[type="checkbox"]:checked + div {
      } 
=> input type 속성선택자 + checked상태선택자 + div 동위선택자(형제)-체크가된
(활성화 페이지에서 체크박스가 선택이 o/x 어떤 상태냐? 에따른)

- 구조 선택자: 부모요소 밑에 자식요소들의 형태와 구조 에 따른
1) 일반구조 선택자:
특정 부모 밑에 자식요소들이 모두 같은 경우에 사용가능
예시) ul>li*4 ..등등 규칙적인 패턴
        &:first-child (ul>li) 선택자의 첫번째 자식요소 (고정적)
	&:last-child (ul>li) 선택자의 마지막 자식요소
	그 외에 선택 요소 &:nth-child(숫자) 선택자의 번호에 해당하는 요소들 선택 (가변적)
	&:nth-child (2n)=(even) 짝수번째 요소들 (n의숫자를 2로나뉘었을 때 짝수)
	&:nth-child (2n+1)=(odd) 홀수번째 요소들 (n의숫자를 2로나뉘었을 때 + 1 )=> 양수

2) 형태구조 선택자:
특정 부모 밑에 자식요소들이 하나라도 상이한 경우에 사용가능
여러가지 다양하게 불규칙적으로
예시) #headerBox { 동일한 하나의 부모요소 안에
        h3:first-of-type { h3 이라는 요소의 첫번째 타입
          color: crimson;
        }
        h1:last-of-type { h1 이라는 요소의 마지막 타입
          color: blueviolet;
        }
        h2:nth-of-type(2) { h2 라는 요소의 2번째 선택자 타입
          color: chocolate;
        }
      }
	:nth-child (2n)=(even)
	:nth-child (2n+1)=(odd) 이것들도 마찬가지로 적용할 수 있다.

- 문자 선택자
1) 전(before) 문자 선택자 :
특정 텍스트 혹은 태그 요소를 작성한 후 해당 요소 앞쪽 (좌/ 상대적 앞쪽=>z축을 기준으로 의미)에 어떤 문자 혹은 태그 등을 만들어서 삽입하고자 싶을 때

2) 후(after) 문자 선택자 :
특정 텍스트 혹은 태그 요소를 작성한 후 해당 요소 뒤쪽 (우 / 상대적 뒤쪽=>z축을 기준으로 의미)에 어떤 문자 혹은 태그 등을 만들어서 삽입하고자 할 때

3) ※전/후 문자 선택자 : ::(콜론)을 2개쓴다. ※ 중요!!
- ::before
- ::after
>>반드시 내부에 content: "()" 이 요소가 존재해야 작동! ☆☆☆
&::before {
          content: counter(num)".";  예시)

2) 속성
3) 변환 / 전환 / 애니메이션




****CSS의 고수들은 : custom css (꿀팁!)
기존에 태그안에 붙이는 속성들은 몇 개 없다. (내장속성)들 예시(a href="" id="") 등등
커스터마이징 할 수 있는 속성들은
<p data-=""> (data-**="" ) data 속성으로 내 입맛대로 만들 수 있다.
속성명은 attr(); 이렇게 쓰고
&::after {
          content: "- "attr(data-page) "page"; ----"문자열" 앞뒤로 붙게된다.

form>input:text+input:password 수식을 이렇게 입력하면 나온다.
 <form action="">
      <input type="text" name="" id="">
      <input type="password" name="" id="">
    </form>
(h${header-$}*3)*2
     요소를 줄때 {} 이용
해당태그에 커서를 두고 alt 누르고 화살표방향키를 누르면 이동한다. 
ul.gnb>(li>a)*5
      <li><a href=""></a></li>
.gnb 는 클래스 이름을 수식한다.